# =========================
# App 基础配置
# =========================
APP_NAME=YVideo Factory
APP_ENV=dev
APP_TIMEZONE=America/Chicago
LOG_LEVEL=INFO
HOST=0.0.0.0
PORT=8000

# 本地仅用于测试的服务级密钥（不要提交到仓库）
SERVICE_API_KEY=OUi0GNwLf3QGouAvnyppxcl8A+DXoFCZFwsSI2hqqPE=
# 本地前端常用端口按需追加
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

GCP_PROJECT_ID="fleet-blend-469520-n7"
GCP_REGION="us-central1"

# =========================
# Cloud SQL（sidecar 连接名）
# =========================
# 形如：myproj:asia-northeast1:pg-prod
CLOUD_SQL_CONN_NAME=fleet-blend-469520-n7:us-central1:yvideo-factory-db-prod

# =========================
# 数据库（PostgreSQL）
# =========================
# dev 专用库 + dev 专用用户；主机名必须是 cloudsql（即 sidecar 服务名），端口 5432
# 若密码包含特殊字符（建议有），请先做 URL 编码后填入 <ENCODED_DEV_PASSWORD>
DATABASE_URL=postgresql+psycopg2://appdev:930828Krisrita%2A@cloudsql:5432/yvideo_dev

# =========================
# 缓存与队列（Redis / Celery）
# =========================
# 方案 A：本地 Redis 容器（compose 中的服务名即 redis）
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}
CELERY_TIMEZONE=${APP_TIMEZONE}
CELERY_WORKER_CONCURRENCY=4
CELERY_PREFETCH_MULTIPLIER=1
CELERY_TASK_ACKS_LATE=true
CELERY_QUEUES=high_priority,default,gpu_queue,api_queue,cpu_queue,low_priority

# =========================
# 存储（GCS，本地开发用 SA 凭据）
# =========================
GCS_ENABLE=true
GCS_BUCKET_NAME=video_fatory-dev-bucket                   # 例如：yvideo-dev-bucket
DEFAULT_STORAGE_URI=gs://video_fatory-dev-bucket/yvideo/
# 与 compose 中挂载路径一致（../gcp/dev-sa.json → /app/.gcp/dev-sa.json）
GOOGLE_APPLICATION_CREDENTIALS=/app/.gcp/dev-sa-key.json

# =========================
# 第三方 / 可选
# =========================
# 如需本地测试 Google APIs、OpenAI 等，可在本机填写；不要提交到仓库
GOOGLE_API_KEY=AIzaSyDQGlVdL61cmBo94iIeo492OdShfxwVB58
OPENAI_API_KEY=
ELEVENLABS_API_KEY=
STABILITY_API_KEY=
YOUTUBE_API_KEY=

# =========================
# 工作流 / 规则路径（容器内路径）
# =========================
WORKFLOWS_DIR=./orchestrator/workflows
ROUTER_RULES_PATH=./rules/router.yaml
QC_RULES_DIR=./rules/qc

# =========================
# 监控与可观测性
# =========================
PROMETHEUS_ENABLE=true
PROMETHEUS_METRICS_PATH=/metrics

# =========================
# 运行（Gunicorn/Uvicorn）
# =========================
GUNICORN_WORKERS=2
GUNICORN_THREADS=2
UVICORN_RELOAD=false     # 开发环境建议开启热重载

# =========================
# 管理端基础认证（可选）
# =========================
BASIC_AUTH_USER=admin
BASIC_AUTH_PASS=<strong-local-password>

# =========================
# 生成参数（可选）
# =========================
TEMPERATURE=0.7
TOP_P=0.95
MAX_OUTPUT_TOKENS=60000
