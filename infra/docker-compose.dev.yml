
services:
  # ============== Cloud SQL Proxy sidecar（本地容器 → Cloud SQL 实例） ==============
  cloudsql:
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.3
    # 5432 是容器内部监听端口；应用容器通过 "cloudsql:5432" 访问数据库
    command:
      - "--port=5432"
      - "${CLOUD_SQL_CONN_NAME}"       # 形如 PROJECT:REGION:INSTANCE（写在 ../.env）
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/config/sa.json
    volumes:
      - ../gcp/dev-sa.json:/config/sa.json:ro
    restart: unless-stopped

  # ================================== API ==================================
  api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    # 如果你的 Dockerfile 没有在 dev 模式启用热重载，可解注下一行以强制 uvicorn --reload
    # command: uvicorn services.api.app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    depends_on:
      - cloudsql
      - redis
    volumes:
      # 代码热更新（保持你的路径）
      - ../services/api/app:/app/services/api/app
      # dev 输出目录
      - ../dev_outputs:/app/services/api/app/data
      # Prompt / 规则热更新（保持你的路径）
      - ../prompts:/app/prompts
      - ../rules:/app/rules
      # GCS 本地开发凭据（只读）
      - ../gcp/dev-sa.json:/app/.gcp/dev-sa.json:ro
    # 如果你本机还会开 SSH 隧道给 Redis/其他服务，用这个别名能从容器连宿主机
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # =============================== Celery Worker ===============================
  worker:
    build:
      context: ..
      dockerfile: Dockerfile.worker
    # 根据你的项目入口调整；以下示例命令请与你的 celery 实例路径一致
    # 例：app.core.celery_app.celery_app 是你的 Celery 实例
    command: bash -lc "celery -A services.api.app.core.celery_app:celery_app worker --loglevel=INFO"
    env_file:
      - ../.env
    depends_on:
      - cloudsql
      - redis
    volumes:
      # 与 API 保持一致的热更新挂载（Worker 也可读取 prompts/rules 等）
      - ../services/api/app:/app/services/api/app
      - ../dev_outputs:/app/services/api/app/data
      - ../prompts:/app/prompts
      - ../rules:/app/rules
      - ../gcp/dev-sa.json:/app/.gcp/dev-sa.json:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # =============================== Flower（可选） ===============================
  flower:
    image: mher/flower:0.9.7
    env_file:
      - ../.env
    command: >
      flower
      --broker=${CELERY_BROKER_URL}
      --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - worker
    restart: unless-stopped

  # =============================== Redis（本地开发） ===============================
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped


